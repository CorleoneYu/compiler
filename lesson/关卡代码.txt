第零关
move(4);

第一关
turnRight();
move(4);

// 结合 第零、一关
// 涉及 条件判断
if (!canMove()) {
    turnRight();
}
move(4);


第二关
turnLeft();
move(3);
turnRight();
move(3);


第三关

// 普通版
turnLeft();
move(5);
turnLeft();
move(5);


// 循环
let times = 3;
while(times) {
    times = times -1;
    turnLeft();
    move(5);
}

// 循环 + if-else
let times = 6;
while(times) {
    times = times -1;
    if (canMove()) {
        move(5);
    } else {
        turnLeft();
    }
}


第四关

// 循环
let times = 3;
while(times) {
    times = times -1;
    turnLeft();
    move(1);
    turnRight();
    move(1);
}

// 循环 + 函数
let times = 3;
let step = fn() {
    turnLeft();
    move(1);
    turnRight();
    move(1);
};

while(times) {
    times = times -1;
    step();
}

各位老师，下午好，我是软件工程三班的林楷羽。我答辩的论文题目是 少儿编程平台的设计与实现，我的指导老师是宋玮老师。
本次答辩陈述主要分为3个部分，项目目的，实现内容及演示，总结与展望

  随着互联网的迅速发展，编程技能越来越受到大家的重视，对于少年儿童的编程教育也越来越重要。但现有的编程平台还不够完善，教导的编程语言难度较大。因此，本项目旨在设计实现一个少儿编程平台来满足少儿学习编程的需求。
  
  首先设计一款适合与少年儿童心智发育，易与他们掌握的编程语言Yu语言，该语言对业界流行语言进行简化了，保留程序语言的核心语法、编程思想，之后，结合该语言，实现了一个简易编译器，使得用户代码可以经过该编译器编译、执行。最后，提供一个完整的用户界面――用户代码输入、用户功能交互、游戏界面、关卡选择，以使得少年儿童可以使用该编程平台进行编程学习。

玩法说明 演示通关 

介绍语法 
1. 类型系统 整型 字符串 布尔值 特殊类型 函数 函数调用  数组 类对象结构
2. 语句系统 if-else条件判断 whie循环语句 let声明赋值语句 

介绍实现原理

  最后总结与展望：本少儿编程平台具有功能齐全、界面简洁美观、用户体验良好的特点：青少年用户可以在特定关卡上，思考并输入自己所编写的用户代码，通过编译运行的功能，实时看到执行结果，以此来进行关卡的闯关。在这个过程中学习并掌握特定的相关编程语言语法、编程技能以及领会代码设计思想。
本系统核心部分为Yu语言的设计，简易编译器的实现以及关卡的设计，同时也是本系统的实现难点。同时，也有若干不足之处，如代码提示、智能纠错等拓展功能因本人技术原因还未实现，希望随着本人技术的提高，不断完善该系统。

最后十分感谢各位评委老师的聆听，不足之处请指正。


